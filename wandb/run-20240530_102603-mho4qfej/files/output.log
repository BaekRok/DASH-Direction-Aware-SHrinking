Files already downloaded and verified
Files already downloaded and verified
  0%|                                                                                                 | 0/2 [00:00<?, ?it/s]
ConvNet(
  (conv1): Conv2d(3, 96, kernel_size=(3, 3), stride=(1, 1))
  (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): ReLU()
  (conv_layers): Sequential(
    (0): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1))
    (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Conv2d(96, 192, kernel_size=(3, 3), stride=(2, 2))
    (4): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
  )
  (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1))
  (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu2): ReLU()
  (final_conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
  (final_bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu_final1): ReLU()
  (final_conv2): Conv2d(192, 10, kernel_size=(1, 1), stride=(1, 1))
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
)
Chunk [1/2], Epoch [1/100], Loss: 1.7528, Train Accuracy: 0.3327, Test Accuracy: 0.4000
Chunk [1/2], Epoch [2/100], Loss: 1.4562, Train Accuracy: 0.4593, Test Accuracy: 0.4780
Chunk [1/2], Epoch [3/100], Loss: 1.3457, Train Accuracy: 0.5101, Test Accuracy: 0.4612
Chunk [1/2], Epoch [4/100], Loss: 1.2673, Train Accuracy: 0.5466, Test Accuracy: 0.4796
Chunk [1/2], Epoch [5/100], Loss: 1.1941, Train Accuracy: 0.5722, Test Accuracy: 0.5027
Chunk [1/2], Epoch [6/100], Loss: 1.1443, Train Accuracy: 0.5896, Test Accuracy: 0.5442
Chunk [1/2], Epoch [7/100], Loss: 1.1012, Train Accuracy: 0.6082, Test Accuracy: 0.5602
Chunk [1/2], Epoch [8/100], Loss: 1.0624, Train Accuracy: 0.6181, Test Accuracy: 0.5348
Chunk [1/2], Epoch [9/100], Loss: 1.0346, Train Accuracy: 0.6355, Test Accuracy: 0.5472
Chunk [1/2], Epoch [10/100], Loss: 1.0081, Train Accuracy: 0.6440, Test Accuracy: 0.6348
Chunk [1/2], Epoch [11/100], Loss: 0.9855, Train Accuracy: 0.6464, Test Accuracy: 0.5350
Chunk [1/2], Epoch [12/100], Loss: 0.9614, Train Accuracy: 0.6620, Test Accuracy: 0.6075
Chunk [1/2], Epoch [13/100], Loss: 0.9464, Train Accuracy: 0.6676, Test Accuracy: 0.5932
Chunk [1/2], Epoch [14/100], Loss: 0.9259, Train Accuracy: 0.6724, Test Accuracy: 0.6079
Chunk [1/2], Epoch [15/100], Loss: 0.9048, Train Accuracy: 0.6823, Test Accuracy: 0.6077
Chunk [1/2], Epoch [16/100], Loss: 0.8842, Train Accuracy: 0.6906, Test Accuracy: 0.6313
Chunk [1/2], Epoch [17/100], Loss: 0.8730, Train Accuracy: 0.6924, Test Accuracy: 0.4961
  0%|                                                                                                 | 0/2 [02:13<?, ?it/s]
Traceback (most recent call last):
  File "/home/baekrok/Plasticity/temp.py", line 147, in <module>
    train(args)
  File "/home/baekrok/Plasticity/temp.py", line 122, in train
    for inputs, labels in test_loader:
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 674, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torchvision/datasets/cifar.py", line 115, in __getitem__
    img = Image.fromarray(img)
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/PIL/Image.py", line 3089, in fromarray
    obj = obj.tobytes()
KeyboardInterrupt