Files already downloaded and verified
Files already downloaded and verified
ConvNet(
  (conv1): Conv2d(3, 96, kernel_size=(3, 3), stride=(1, 1))
  (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): ReLU()
  (conv_layers): Sequential(
    (0): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1))
    (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Conv2d(96, 192, kernel_size=(3, 3), stride=(2, 2))
    (4): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
  )
  (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1))
  (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu2): ReLU()
  (final_conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
  (final_bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu_final1): ReLU()
  (final_conv2): Conv2d(192, 10, kernel_size=(1, 1), stride=(1, 1))
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
)
  0%|                                                                                                 | 0/2 [00:00<?, ?it/s]
Chunk [1/2], Epoch [1/100], Loss: 1.8871, Train Accuracy: 0.2881, Test Accuracy: 0.3687
Chunk [1/2], Epoch [2/100], Loss: 1.5817, Train Accuracy: 0.4018, Test Accuracy: 0.4229
Chunk [1/2], Epoch [3/100], Loss: 1.4409, Train Accuracy: 0.4633, Test Accuracy: 0.4987
Chunk [1/2], Epoch [4/100], Loss: 1.3372, Train Accuracy: 0.5161, Test Accuracy: 0.5187
Chunk [1/2], Epoch [5/100], Loss: 1.2641, Train Accuracy: 0.5418, Test Accuracy: 0.5181
Chunk [1/2], Epoch [6/100], Loss: 1.2111, Train Accuracy: 0.5647, Test Accuracy: 0.5410
Chunk [1/2], Epoch [7/100], Loss: 1.1612, Train Accuracy: 0.5837, Test Accuracy: 0.4945
Chunk [1/2], Epoch [8/100], Loss: 1.1182, Train Accuracy: 0.6010, Test Accuracy: 0.5598
Chunk [1/2], Epoch [9/100], Loss: 1.0815, Train Accuracy: 0.6132, Test Accuracy: 0.5749
Chunk [1/2], Epoch [10/100], Loss: 1.0493, Train Accuracy: 0.6242, Test Accuracy: 0.5282
Chunk [1/2], Epoch [11/100], Loss: 1.0144, Train Accuracy: 0.6412, Test Accuracy: 0.6279
Chunk [1/2], Epoch [12/100], Loss: 0.9887, Train Accuracy: 0.6490, Test Accuracy: 0.6120
Chunk [1/2], Epoch [13/100], Loss: 0.9676, Train Accuracy: 0.6560, Test Accuracy: 0.5622
Chunk [1/2], Epoch [14/100], Loss: 0.9383, Train Accuracy: 0.6693, Test Accuracy: 0.6142
Chunk [1/2], Epoch [15/100], Loss: 0.9143, Train Accuracy: 0.6750, Test Accuracy: 0.5810
Chunk [1/2], Epoch [16/100], Loss: 0.8880, Train Accuracy: 0.6849, Test Accuracy: 0.6270
Chunk [1/2], Epoch [17/100], Loss: 0.8682, Train Accuracy: 0.6928, Test Accuracy: 0.5968
Chunk [1/2], Epoch [18/100], Loss: 0.8556, Train Accuracy: 0.7012, Test Accuracy: 0.6185
Chunk [1/2], Epoch [19/100], Loss: 0.8345, Train Accuracy: 0.7061, Test Accuracy: 0.5654
Chunk [1/2], Epoch [20/100], Loss: 0.8264, Train Accuracy: 0.7102, Test Accuracy: 0.6615
Chunk [1/2], Epoch [21/100], Loss: 0.8015, Train Accuracy: 0.7184, Test Accuracy: 0.6042
Chunk [1/2], Epoch [22/100], Loss: 0.7859, Train Accuracy: 0.7253, Test Accuracy: 0.6481
Chunk [1/2], Epoch [23/100], Loss: 0.7606, Train Accuracy: 0.7337, Test Accuracy: 0.6640
Chunk [1/2], Epoch [24/100], Loss: 0.7405, Train Accuracy: 0.7412, Test Accuracy: 0.6386
Chunk [1/2], Epoch [25/100], Loss: 0.7298, Train Accuracy: 0.7424, Test Accuracy: 0.6370
Chunk [1/2], Epoch [26/100], Loss: 0.7252, Train Accuracy: 0.7438, Test Accuracy: 0.6134
Chunk [1/2], Epoch [27/100], Loss: 0.6984, Train Accuracy: 0.7544, Test Accuracy: 0.5999
Chunk [1/2], Epoch [28/100], Loss: 0.6964, Train Accuracy: 0.7552, Test Accuracy: 0.6545
Chunk [1/2], Epoch [29/100], Loss: 0.6731, Train Accuracy: 0.7658, Test Accuracy: 0.6437
Chunk [1/2], Epoch [30/100], Loss: 0.6483, Train Accuracy: 0.7720, Test Accuracy: 0.6476
Chunk [1/2], Epoch [31/100], Loss: 0.6274, Train Accuracy: 0.7802, Test Accuracy: 0.6477
Chunk [1/2], Epoch [32/100], Loss: 0.6126, Train Accuracy: 0.7856, Test Accuracy: 0.5914
Chunk [1/2], Epoch [33/100], Loss: 0.6084, Train Accuracy: 0.7869, Test Accuracy: 0.6094
Chunk [1/2], Epoch [34/100], Loss: 0.5940, Train Accuracy: 0.7916, Test Accuracy: 0.6629
Chunk [1/2], Epoch [35/100], Loss: 0.5829, Train Accuracy: 0.7941, Test Accuracy: 0.6885
Chunk [1/2], Epoch [36/100], Loss: 0.5709, Train Accuracy: 0.7988, Test Accuracy: 0.6767
Chunk [1/2], Epoch [37/100], Loss: 0.5544, Train Accuracy: 0.8074, Test Accuracy: 0.6221
Chunk [1/2], Epoch [38/100], Loss: 0.5334, Train Accuracy: 0.8136, Test Accuracy: 0.7020
Chunk [1/2], Epoch [39/100], Loss: 0.5143, Train Accuracy: 0.8204, Test Accuracy: 0.6437
Chunk [1/2], Epoch [40/100], Loss: 0.5046, Train Accuracy: 0.8224, Test Accuracy: 0.6372
Chunk [1/2], Epoch [41/100], Loss: 0.4896, Train Accuracy: 0.8308, Test Accuracy: 0.6487
Chunk [1/2], Epoch [42/100], Loss: 0.4638, Train Accuracy: 0.8386, Test Accuracy: 0.6285
Chunk [1/2], Epoch [43/100], Loss: 0.4666, Train Accuracy: 0.8362, Test Accuracy: 0.6131
Chunk [1/2], Epoch [44/100], Loss: 0.4475, Train Accuracy: 0.8452, Test Accuracy: 0.5901
Chunk [1/2], Epoch [45/100], Loss: 0.4309, Train Accuracy: 0.8489, Test Accuracy: 0.6685
Chunk [1/2], Epoch [46/100], Loss: 0.4184, Train Accuracy: 0.8534, Test Accuracy: 0.6778
Chunk [1/2], Epoch [47/100], Loss: 0.4023, Train Accuracy: 0.8594, Test Accuracy: 0.6996
Chunk [1/2], Epoch [48/100], Loss: 0.3932, Train Accuracy: 0.8635, Test Accuracy: 0.6621
Chunk [1/2], Epoch [49/100], Loss: 0.3857, Train Accuracy: 0.8650, Test Accuracy: 0.6428
Chunk [1/2], Epoch [50/100], Loss: 0.3825, Train Accuracy: 0.8685, Test Accuracy: 0.6524
Chunk [1/2], Epoch [51/100], Loss: 0.3543, Train Accuracy: 0.8774, Test Accuracy: 0.6642
Chunk [1/2], Epoch [52/100], Loss: 0.3542, Train Accuracy: 0.8766, Test Accuracy: 0.6910
  0%|                                                                                                 | 0/2 [05:31<?, ?it/s]
Traceback (most recent call last):
  File "/home/baekrok/Plasticity/temp.py", line 145, in <module>
    args = parser.parse_args()
  File "/home/baekrok/Plasticity/temp.py", line 120, in train
    total_val = 0
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 674, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torchvision/datasets/cifar.py", line 115, in __getitem__
    img = Image.fromarray(img)
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/PIL/Image.py", line 3093, in fromarray
    return frombuffer(mode, size, obj, "raw", rawmode, 0, 1)
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/PIL/Image.py", line 3009, in frombuffer
    return frombytes(mode, size, data, decoder_name, args)
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/PIL/Image.py", line 2950, in frombytes
    im = new(mode, size)
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/PIL/Image.py", line 2914, in new
    return im._new(core.fill(mode, size, color))
KeyboardInterrupt