Files already downloaded and verified
Files already downloaded and verified
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
Files already downloaded and verified
Files already downloaded and verified






























100%|███████████████████████████████████████████████████████████████████████████████████████| 30/30 [06:18<00:00, 12.61s/it]
Files already downloaded and verified
  0%|                                                                                                | 0/30 [00:00<?, ?it/s]





















 70%|████████████████████████████████████████████████████████████▉                          | 21/30 [04:19<01:51, 12.38s/it]
Traceback (most recent call last):
  File "/home/baekrok/Plasticity/temp.py", line 123, in <module>
    run_online(vars(args))
  File "/home/baekrok/Plasticity/temp.py", line 50, in run_online
    for inputs, targets in chunk_loader:
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 674, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torchvision/datasets/cifar.py", line 118, in __getitem__
    img = self.transform(img)
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torchvision/transforms/transforms.py", line 95, in __call__
    img = t(img)
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torchvision/transforms/transforms.py", line 137, in __call__
    return F.to_tensor(pic)
  File "/opt/anaconda3/envs/torch/lib/python3.10/site-packages/torchvision/transforms/functional.py", line 170, in to_tensor
    img = img.view(pic.size[1], pic.size[0], F_pil.get_image_num_channels(pic))
KeyboardInterrupt